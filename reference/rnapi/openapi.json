{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://dev.rentnow.com.ua/api/v1",
      "description": "dev"
    },
    {
      "description": "stage",
      "url": "http://st.rentnow.com.ua/api/v1"
    }
  ],
  "info": {
    "description": " ",
    "version": "1.0.0",
    "title": "Rentnow Api Document",
    "termsOfService": "",
    "contact": {
      "email": "support@rentnow.com.ua"
    }
  },
  "tags": [
    {
      "name": "Auth"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Get Login TOKEN",
        "description": " ",
        "operationId": "auth.login",
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "*/json"
              ]
            },
            "in": "header",
            "name": "Accept",
            "required": true
          }
        ]
      }
    },
    "/categories/list": {
      "get": {
        "summary": "Get nested list of all categories",
        "tags": [
          "category"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "ru",
                "uk"
              ]
            },
            "in": "header",
            "name": "X-localization",
            "description": "Default: `ru`"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "*/json"
              ]
            },
            "in": "header",
            "name": "Accept",
            "required": true
          }
        ],
        "description": " ",
        "operationId": "v1.categories.list"
      }
    },
    "/listings/list": {
      "get": {
        "summary": "Lisings list by category (paged)",
        "tags": [
          "Listing"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Listing"
                      }
                    },
                    "meta": {
                      "type": [
                        "string",
                        "object"
                      ],
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": "integer"
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "path": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "to": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation-Error"
                }
              }
            }
          }
        },
        "description": " ",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "exclusiveMaximum": false,
              "minimum": 1
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category_slug",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "*/json"
              ]
            },
            "in": "header",
            "name": "Accept",
            "required": true
          }
        ],
        "operationId": "v1.listings.list"
      }
    },
    "/localities/city-list": {
      "get": {
        "summary": "Get gist of city",
        "tags": [
          "Locality",
          "City"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "ru",
                "uk"
              ],
              "default": "ru"
            },
            "in": "header",
            "name": "X-localization"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "*/json"
              ]
            },
            "in": "header",
            "name": "Accept",
            "required": true
          }
        ],
        "description": " ",
        "operationId": "v1.localities.city-list"
      },
      "parameters": []
    },
    "/order-requests/create-from-bot": {
      "post": {
        "summary": "Create new order-request from bot",
        "tags": [
          "Order Request"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation-Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Phone number in the intertationan format",
                    "example": 380995555555
                  },
                  "user_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "user_registration": {
                    "type": "string",
                    "enum": [
                      "local",
                      "not_local"
                    ]
                  },
                  "city_slug": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "rent_start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2019-10-03"
                  },
                  "rent_days": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 30
                  },
                  "need_delivery": {
                    "type": "boolean"
                  },
                  "delivery_address": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "payment_type": {
                    "type": "string",
                    "enum": [
                      "cash",
                      "soft_deal"
                    ]
                  }
                },
                "required": [
                  "phone",
                  "user_name",
                  "user_registration",
                  "city_slug",
                  "rent_start_date",
                  "need_delivery",
                  "payment_type"
                ]
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "*/json"
              ]
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "title": "Category",
        "type": "object",
        "description": "Category Object",
        "properties": {
          "with_listings": {
            "type": "boolean"
          },
          "child_categories": {
            "type": "array",
            "items": {
              "$ref": ""
            }
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "x-tags": [
          "category"
        ]
      },
      "Listing": {
        "title": "Listing",
        "type": "object",
        "description": "Litting in list",
        "properties": {
          "thumbnail": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "deposit": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "thumbnail",
          "price",
          "deposit",
          "url",
          "title",
          "slug"
        ],
        "x-tags": [
          "Listing"
        ]
      },
      "Validation-Error": {
        "title": "Validation Error",
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "{key_name}": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "message": {
            "type": "string"
          }
        },
        "x-tags": [
          "validation"
        ]
      }
    },
    "requestBodies": {},
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Example: Bearer dfsdfsdj..."
      }
    },
    "links": {},
    "callbacks": {}
  },
  "security": []
}